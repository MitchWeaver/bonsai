# vi:syntax=sh
# shellcheck shell=sh

loadconfig() {
    # use --config= argument if given
    if [ -z "$bonsairc" ] ; then
        # otherwise use user's config if exists, else system's config
        bonsairc="${HOME}/.local/bonsai/src/bonsai.rc"
        [ -s "$bonsairc" ] || bonsairc=/src/bonsai.rc
    fi
    # check if file is valid and is readable
    [ -r "$bonsairc" ] || die 'loadconfig(): could not source config'
    . "$bonsairc"

    # assign root if we've been given --root=
    [ "$ROOT" ] && root="$ROOT"
    # assign gcc if we've been given --gcc=
    [ "$GCC" ] && gcc="$GCC"
   
    # set default variables if not in config file
    : "${root:="${HOME}/.local/bonsai"}" \
      "${bonsaihome:="$root/src"}" \
      "${pkgs:="$bonsaihome/pkgs"}" \
      "${ports:="$bonsaihome/ports"}" \
      "${sources:="$bonsaihome/sources"}" \
      "${work:="$bonsaihome/work"}" \
      "${bonsaidb:="$bonsaihome/bonsai.db"}" \
      "${confirm_prompt:="continue? (y/n): "}" \
      "${prompt='→'}" \
      "${delim:='#'}"

    # remake directories if deleted
    mkdir -p "$pkgs" "$sources" "$ports"

    update_db
    sanity_check
    unset _root _gcc _config
}

# creates a skeleton config
# params: $path
create_skeleton_config() {
    if [ "$1" ] ; then
        if [ ! -e "$1" ] ; then
            path="$1"
        else
            die "create_skeleton_config(): Refusing to overwrite $1"
        fi
    else
        path="${HOME}"/.local/bonsai/src
        mkdir -p "$path"
        echo 'copying default config to ~/.local/bonsai/bonsai.rc'
    fi

cat > "$path"/bonsai.rc << "EOF"
# bonsai root
root=${HOME}/.local/bonsai

# compiling
gcc="$root/bin/gcc"
jobs=${jobs:=$(grep -c 'cpu cores' /proc/cpuinfo 2>/dev/null)}

# options
makeflags=''
keep_tarballs=true
mans=true   # install man pages?
nls=false   # provide native-language-support?

# prompt prefixing msgs from the pkg mgr
prompt='→'

# used to confirm adding/deleting pkgs
confirm_prompt='continue? (y/n): '

# configure/make silently without warnings?
# note: this enables as much silencing as allowed,
#       but does NOT send everything to /dev/null
quiet=false

# PS1 inside chroot
# common favorites: 🌿 🍂 🌱 → % $
PS1='% '

# package/version delimiter
# can be any character or series of characters, however:
# * must be sane (no $, `, /, etc)
# * cannot be '-' due to the character often being in pkg names
# * common favorites: #@?!*†¤§≡
delim='#'

# flags
# warning: do not change these unless you seriously know what you're doing.
# note: enable this cflag if you do not care about package portability: -march=native 
cflags="-s -w -Os -no-pie -pipe -Wl,--gc-sections -fstack-protector-strong"
cflags="$cflags -static --static -Wl,-Bstatic -static-libgcc"
cflags="$cflags -static-libstdc++ -static-libasan -static-libtsan"
cflags="$cflags -static-liblsan -static-libubsan"
ldflags="-static --static -s -fdata-sections -ffunction-sections"
cppflags="$cflags"
cxxflags="$cflags"
EOF
}
