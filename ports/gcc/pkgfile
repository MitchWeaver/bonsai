# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
info='GNU C Compiler x64 musl-libc toolchain'
version=9.1.0
deps='musl kernel-headers bison flex'
source=http://mirrors.kernel.org/gnu/$name/$name-$version/$name-$version.tar.xz
sha512=b6134df027e734cee5395afd739fcfa4ea319a6017d662e54e89df927dea19d3fff7a6e35d676685383034e3db01c9d0b653f63574c274eeb15a2cb0bc7a1f28
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
binutils_version=2.32
binutils_source=http://mirrors.kernel.org/gnu/binutils/binutils-$binutils_version.tar.xz
binutils_sha512=d326408f12a03d9a61a9de56584c2af12f81c2e50d2d7e835d51565df8314df01575724afa1e43bd0db45cfc9916b41519b67dfce03232aa4978704492a6994a
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
gmp_version=6.1.2
gmp_source=http://ftp.gnu.org/gnu/gmp/gmp-$gmp_version.tar.xz
gmp_sha512=9f098281c0593b76ee174b722936952671fab1dae353ce3ed436a31fe2bc9d542eca752353f6645b7077c1f395ab4fdd355c58e08e2a801368f1375690eee2c6
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
mpfr_version=4.0.2
mpfr_source=http://mpfr.org/mpfr-$mpfr_version/mpfr-$mpfr_version.tar.xz
mpfr_sha512=d583555d08863bf36c89b289ae26bae353d9a31f08ee3894520992d2c26e5683c4c9c193d7ad139632f71c0a476d85ea76182702a98bf08dde7b6f65a54f8b88
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
mpc_version=1.1.0
mpc_source=http://mirrors.kernel.org/gnu/mpc/mpc-$mpc_version.tar.gz
mpc_sha512=72d657958b07c7812dc9c7cbae093118ce0e454c68a585bfb0e2fa559f1bf7c5f49b93906f580ab3f1073e5b595d23c6494d4d76b765d16dde857a18dd239628
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

prebuild() {
    # use /lib instead of /lib64
    sed '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64 > tmp ; mv -f tmp gcc/config/i386/t-linux64
    sed 's/lib64/lib/' gcc/config/i386/linux64.h > tmp       ; mv -f tmp gcc/config/i386/linux64.h

    # download and checksum our binutils/libs
    msg 'downloading binutils, libgmp, libmpfr, libmpc...'
    [ -f "$sources/binutils$delim$binutils_version.tar.xz" ] || dlcurl "$binutils_source" binutils "$binutils_version"
    sha512="$binutils_sha512" verify_checksum "$sources/binutils$delim$binutils_version.tar.xz"
    [ -f "$sources/gmp$delim$gmp_version.tar.xz" ] || dlcurl "$gmp_source" gmp "$gmp_version"
    sha512="$gmp_sha512" verify_checksum "$sources/gmp$delim$gmp_version.tar.xz"
    [ -f "$sources/mpfr$delim$mpfr_version.tar.xz" ] || dlcurl "$mpfr_source" mpfr "$mpfr_version"
    sha512="$mpfr_sha512" verify_checksum "$sources/mpfr$delim$mpfr_version.tar.xz"
    [ -f "$sources/mpc$delim$mpc_version.tar.gz" ] || dlcurl "$mpc_source" mpc "$mpc_version"
    sha512="$mpc_sha512" verify_checksum "$sources/mpc$delim$mpc_version.tar.gz"

    # extract all
    msg "extracting all..."
    mkdir -p ../res
    decompress "$sources/binutils$delim$binutils_version.tar.xz" | tar -C ../res -xf -
    decompress "$sources/gmp$delim$gmp_version.tar.xz"           | tar -C ../res -xf -
    decompress "$sources/mpfr$delim$mpfr_version.tar.xz"         | tar -C ../res -xf -
    decompress "$sources/mpc$delim$mpc_version.tar.gz"           | tar -C ../res -xf -

    # create symlinks from the ../res directory
    # gcc expects each lib's folder to be in the build dir named its name
    ln -s ../res/gmp-$gmp_version gmp
    ln -s ../res/mpfr-$mpfr_version mpfr
    ln -s ../res/mpc-$mpc_version mpc
    # create symlinks to everything from binutils that does not
    # already exist in the gcc dir, (this way gcc components take precedence)
    for i in ../res/binutils-$binutils_version/* ; do
        ln -s "$i" 2>/dev/null ||: # nop exit code if already exists
    done
    unset i
}
build() {
    # build gcc in a separate, clean dir
    mkdir build
    cd build
    ln -s ../configure

#    GCC_FLAGS="-fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels"
    
    LIBRARY_PATH="$root/lib:$root/libexec" \
    bonsai_configure \
        --prefix="$PREFIX" \
        --mandir="$MANDIR" \
        --disable-multilib \
        --disable-symvers \
        --disable-libmpx \
        --disable-libmudflap \
        --disable-libsanitizer \
        --disable-fixed-point \
        --disable-libstdcxx-pch \
        --disable-shared \
        --disable-host-shared \
        --enable-static \
        --enable-host-static \
        --with-system-zlib \
        --disable-werror \
        --enable-checking=release \
        --enable-__cxa_atexit \
        --enable-threads \
        --enable-tls \
        --enable-languages=c,c++ \
        --disable-libgomp \
        --disable-bootstrap

    msg 'configure finished, building...'
    LIBRARY_PATH="$root/lib:$root/libexec" \
    bonsai_make

    msg 'gcc build finished, installing...'
    LIBRARY_PATH="$root/lib:$root/libexec" \
    bonsai_make install
}
postbuild() {
    # symlink cc
    ln -sf gcc "$pkg"/bin/cc

    # add c99 and c89 for convenience
    >"$pkg"/bin/c99 printf '%s\n%s' '#!/bin/sh' 'gcc -std=c99 "$@"'
    >"$pkg"/bin/c89 printf '%s\n%s' '#!/bin/sh' 'gcc -std=c89 "$@"'
    chmod +x "$pkg"/bin/c99 "$pkg"/bin/c89

    # remove triplet directory, (we will not be using it, save 20MB)
    rm -r "${pkg:?}/$TARGET"

    # remove java libs
    # (soon to be deprecated and nobody uses them anyway, save 30MB)
    find "$pkg" -type f -name libgtkpeer.a  -exec rm -f "{}" \;
    find "$pkg" -type f -name libgjsmalsa.a -exec rm -f "{}" \;
    find "$pkg" -type f -name libgij.a      -exec rm -f "{}" \;
}
