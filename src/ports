# vi:syntax=sh
# shellcheck shell=sh

# search ports for given $name
search() {
    set -- $(find "$ports" ! -path "$ports" -type d -name "*$1*" | sort)
    [ "$1" ] || die "port $1 not found"
    for path in $@ ; do
        path="${path##*/}"
        echo "${path%.*}"
    done
    unset results path
}

# calculate dependencies and store them
# in $pkgdeps in the correct installation order
# params: $name
pkgdeps() {
    # remember the original package we're checking
    arg=$1

    dep_recurse() {
        # unset as not to carry over deps from previous pkg
        unset deps

        # source the dep's pkgfile
        [ -s "$ports/$1/pkgfile" ] || 
            die "pkgdeps(): could not source $1's pkgfile"
        . "$ports/$1/pkgfile"

        # recurse and find the dep's deps, skipping if already in list
        for dep in $deps ; do
            case "$pkgdeps" in
                *" $dep "*) ;; # already in list
                *) dep_recurse $dep
            esac
        done

        # check if dep is not the main package stored in $arg
        # (do not display a package as a dep of itself)
        [ $1 != $arg ] && pkgdeps=" $pkgdeps $1 "
    }
    dep_recurse "$arg"

    # remove multiple whitespaces
    set -- $pkgdeps
    pkgdeps="$*"

    export pkgdeps

    unset -f dep_recurse
    unset dep deps arg
}


# print info about a given $name
portinfo() {
    [ "$2" ]    && die "info(): too many arguments"
    [ -z "$1" ] && die "info(): no argument provided"
    name="$1"
    pkgfile="$ports/$name/pkgfile"

    [ -f "$pkgfile" ] || die "addpkg(): could not source $name's pkgfile"
    . "$pkgfile"

    printf "%s\n%s\n%s\n%s\n%s\n" \
        "name:    $name" \
        "info:    ${info:=?}" \
        "version: ${version:=unknown}" \
        "source:  ${source:=?}" \
        "depends: ${depends:=none}"
    unset name pkgfile name info version source depends 
}

# print out the contents of a given $name's pkgfile
portcat() {
    [ "$2" ]    && die "portcat(): too many arguments"
    [ -z "$1" ] && die "portcat(): no argument provided"
    [ -f "$ports/$1/pkgfile" ] || die "pkgcat(): could not find $1's pkgfile"
    shellcat "$ports/$1/pkgfile"
}
