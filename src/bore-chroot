enter_chroot() {
    if already_chrooted > /dev/null ; then
        unmount_drives
        already_chrooted &&
            die "chroot was already mounted and unable to automatically unmount"
    fi
    get_chroot_shell || die "can't find a working shell?"

    cp -f /etc/resolv.conf "$root"/etc/resolv.conf
    _TERM="$TERM"
    _PS1="$PS1"
    export TERM=vt100 PS1="(chroot) % "

    # change whatever user had $root equal to
    # to root=/ in their bore.rc
    old_config_root="$(head -n 1 "$borerc")"
    sed 's|root=.*|root=/|' "$borerc" > "$borerc".tmp
    mv -f "$borerc".tmp "$borerc"

    mount_drives
    sudo chroot "$root" "$chroot_shell" -l -i
    unchroot
}

get_chroot_shell() {
    for shell in loksh mksh bash zsh dash sh ; do
        if [ -L "$root"/bin/$shell ] ; then
            chroot_shell=$(readlink "$root"/bin/$shell)
            [ "$chroot_shell" != /src/pkgs/$shell/bin/$shell ] &&
                die "You might want to relink_world before chrooting in..."
            return 0
        fi
    done
    return 1
}

mount_drives() {
    sudo mount -R -t devtmpfs /dev "$root"/dev || die 'Could not mount.'
    sudo mount -R -t devpts /dev/pts "$root"/dev/pts
    sudo mount -R -t proc /proc "$root"/proc
    sudo mount -R -t sysfs /sys "$root"/sys
}

unmount_drives() {
    tryumount() {
        path="$1"
        if ! sudo umount "$path" 2> /dev/null ; then
            msg "umount ${path} failed... trying to umount -f"
            sleep 1
            if ! sudo umount -f "$path" 2> /dev/null ; then
                msg "umount -f ${path} failed... trying to umount -l"
                sleep 1
                if ! sudo umount -l "$path" 2> /dev/null ; then
                    warn "WARNING: could  not umount -l ${path}!"
                fi
            fi
        fi
    }
    tryumount "$root"/dev/pts
    tryumount "$root"/dev
    tryumount "$root"/proc
    tryumount "$root"/sys
    unset -f tryumount
}

unchroot() {
    unmount_drives
    if already_chrooted ; then
        unmount_drives
        already_chrooted && warn "was unable to automatically unmount chroot!"
    fi
    export TERM="$_TERM" PS1="$_PS1"

    # restore the users config
    sed "s|root=.*|$old_config_root|" "$borerc" > "$borerc".tmp
    mv -f "$borerc".tmp "$borerc"

    sudo chown -R "$USER" "${root:?}"

    msg 'exited chroot!'
}

# check if drives have already been mounted
already_chrooted() {
    [ "$(ls -A "$root"/dev/pts 2> /dev/null)" ] || return 1
    msg "the chroot has already been mounted!"
}
# vi:syntax=sh
# shellcheck shell=sh
