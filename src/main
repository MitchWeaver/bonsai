PKG_MGR_NAME=$(basename "$0")
export PKG_MGR_NAME

initglobals() {
    # unset any env variables that could interfere
    unset cc CC CFLAGS LDFLAGS CPPFLAGS CXXFLAGS \
        LIBRARY_PATH CPATH C_INCLUDE_PATH CPLUS_INCLUDE_PATH \
        OBJC_INCLUDE_PATH PKG_CONFIG

    PATH="$root/bin:$PATH"
    LC_ALL=C
    LANG=C
    export PATH LC_ALL LANG

#    # if not inside the chroot,
#    # prefer to use chroot's tools, (if they exist), over the host system's
#    if [ "$root" != / ] ; then
#        check() {
#            test -x "$root"/bin/$1
#            return $?
#        }
#        check grep  && GREP="$root"/bin/grep   && export GREP
#        check sed   && SED="$root"/bin/sed     && export SED
#        check awk   && AWK="$root"/bin/awk     && export AWK
#        check mkdir && MKDIR="$root"/bin/mkdir && export MKDIR
#        check echo  && ECHO="$root"/bin/echo   && export ECHO
#        check find  && FIND="$root"/bin/find   && export FIND
#        check mv    && MV="$root"/bin/mv       && export MV
#        check rm    && RM="$root"/bin/rm       && export RM
#        check tar   && TAR="$root"/bin/tar     && export TAR
#        check seq   && SEQ="$root"/bin/seq     && export SEQ
#        check sort  && SORT="$root"/bin/sort   && export SORT
#        check xargs && XARGS="$root"/bin/xargs && export XARGS
#        check make  && MAKE="$root"/bin/make   && export MAKE
#        unset -f check
#    fi
}

main() {
    [ $# -eq 0 ] && usage

    case "$1" in
        *skeleton|skel) shift ; create_skeleton_config "$1" ; exit ;;
        --config=*) config="${1#--config=}" ; shift ;;
        --root=*) _root="${1#--root=}" ; shift ;;
        --gcc=*) _gcc="${1#--gcc=}" ; shift ;;
        -y) NO_PROMPT=true ; export NO_PROMPT ; shift ;;
        *help|-h)  usage ;;
    esac

    loadconfig "$@"
    initglobals
    create_root_dirs
    setup_etc

    while [ $# -gt 0 ] ; do
        case "$1" in
            add|-a) shift ; addpkg "$@" ; exit $?  ;;
            del|-d)
                shift
                [ "$1" ] || die "delpkg(): no pkg given"
                while [ $# -gt 0 ] ; do
                    delpkg "$1"
                    shift
                done
                ;;
            search|-s) search "$2"   ; exit $? ;;
            isinst|-i)
                shift
                [ "$1" ] || die 'isinst(): no argument given'
                while [ $# -gt 0 ] ; do
                    isinst "$1"
                    shift
                done
                ;;
            list|-l)   listpkgs      ; exit $? ;;
            count|-c)  countpkgs     ; exit $? ;;
            info)      portinfo "$2" ; exit $? ;;
            cat)       portcat "$2"  ; exit $? ;;
            deps)
                pkgdeps "$2"
                if [ "$pkgdeps" ] ; then
                    msg "$pkgdeps"
                    exit
                else
                    msg "port $2 has no dependencies"
                    exit 1
                fi
                ;;
            relink|link)
                shift
                [ "$1" ] || die "linkpkg(): invalid number of arguments"
                while [ $# -gt 0 ] ; do
                    linkpkg "$1"
                    shift
                done
                ;;
            --relink-world)
                shift
                relink_world "$@"
                exit $?
                ;;
            gccinfo) gccinfo ; exit $? ;;
            chroot) enter_chroot ; exit $? ;;
            *) set -- add "$@" ;;
        esac
    done
    exit $?
}
# vi:syntax=sh
# shellcheck shell=sh
