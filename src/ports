# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# Portfile Handling      http://github.com/bonsai-linux/bonsai
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

getportdir() {
while read -r dir ; do
    if [ -d "$dir$1" ] ; then
        portdir=$dir$1
        return
    fi
done <<-EOF
$(printf '%s\n' "$PORTS"/*/)
EOF
die "unable to find portdir for '$1'"
}

getpkgfile() {
    [ -f "$portdir"/pkgfile ] || die "unable to find pkgfile for '$1'"
    pkgfile=$portdir/pkgfile
}

# desc: loads $pkgfile variables into environment
# arg: $name of pkg
loadpkgfile() {
    name=$1
    getportdir "$name"
    getpkgfile "$name"
    . "$pkgfile"

    # helper variables
    pkgstring=$name${ver:+\#}$ver

    # dir where port will be built and files copied
    workdir=${WORK:-?}/$name
    # dir the package will be installed to
    pkg=$PKGS/$pkgstring
}

unloadpkgfile() {
    unset name portdir pkgfile pkg workdir
    unset info url ver link
    unset -f build
}

# checks whether $name is installed
isinst() {
    # prefixed '@' denotes metapkgs, which do not have versions
    case $1 in
        @*)
            [ -d "$PKGS/$1" ]
            ;;
         *)
            # we use a case statement as globs do not work with test
            printf '%s\n' "$PKGS"/*/ | \
            while read -r dir ; do
                case $dir in */"$1"\#*) break ; esac
                false
            done
    esac
    return $?
}

# list packages installed
listpkgs() {
    printf '%s\n' "$PKGS"/* | \
    while read -r pkg ; do
        printf '%s\n' "${pkg#$PKGS/}"
    done
}

# search for a packaged named $1
searchpkg() {
    printf '%s\n' "$PORTS"/*/* | \
    while read -r dir ; do
        case $dir in
            *"$1"*) printf '%s\n' "${dir##*/}"
        esac
    done
}
