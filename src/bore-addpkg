# adds a port
# params: $pkgname
addpkg() {
    [ "$(ls $ports | wc -l)" -gt 0 ] || die "addpkg(): no ports found"

    pkgname=$1
    pkgfile="$ports"/$pkgname/pkgfile
    isinst $pkgname > /dev/null && die "port $pkgname is already installed"

    [ -f "$pkgfile" ] || die "addpkg(): could not source $pkgname's pkgfile"
    . "$pkgfile"

    [ -z "$version" ] && version='unknown'

    pkgid="${pkgname}${delim}${version}"
    pkgdir="$work"/"$pkgid"

    get "$source" $pkgname "$version"

    cd "$pkgdir" || die "addpkg(): unable to cd to $pkgdir"

    msg "building $pkgname..."
    mkdir -p "$pkgs"/$pkgname

    if run_build $pkgname ; then
        sanity_check && rm -rf "$pkgdir"
        link_pkg $pkgname
        clear_junk $pkgname
        add_db $pkgname $version
        msg "$pkgname installed!"
        clean
    fi
    unset pkgname pkgfile version pkgid pkgdir
}

# create symlinks for a port
# params: $pkgname
link_pkg() {
    sanity_check
    pkgname=$1
    cd "$root"
    msg 'creating symlinks...'
    for dir in bin sbin share include etc lib libexec ; do
        # recursively create pkg subdirectories in
        # equivalent /root subdirectories
        # example: $pkgname/lib/pkgconfig -> $root/lib/pkgconfig
        find "$pkgs"/$pkgname/$dir ! -path "*$dir" ! -path "*share/*man*" \
                -type d 2> /dev/null | while read -r subdir ; do
            mkdir -p "${subdir#$pkgs/$pkgname/}"
        done
        # recursively link all files
        # example: $pkgname/include/asm/*.h -> $root/include/asm/*.h
        find "$pkgs"/$pkgname/$dir ! -path "*share/*man*" \
            -type f -o -type l 2> /dev/null | while read -r file ; do
            file="${file#$pkgs/$pkgname/}"

            # BUG: how to fix this when bootstrapping...
            ln -sf "$pkgs/$pkgname/$file" ./$file
        done
    done
    $mans && # only link mans if config boolean is true
    if [ -d "$pkgs"/$pkgname/share/man ] ; then
        seq -f "man%g" -s " " 1 8 | while read -r manX ; do
            find "$pkgs"/$pkgname/share/man/$manX \
                    ! -path "*/$manX" 2> /dev/null | while read -r man ; do
                ln -sf "$pkgs/$pkgname/share/man/$manX/${man##*/}" \
                    "${man#$pkgs/$pkgname/}"
            done
        done
    fi
    unset dir subdir file manX man
}
