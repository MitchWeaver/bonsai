# downloads a given url and extracts to $work
get() {
    [ $# -lt 1 ] && die 'get(): no source given'
    clean # clean $work, incase bore was interrupted
    local url="$1"
    local tmp=$(mktemp -d)

    mkdir -p "$pkgdir" "$sources"
    cd "$sources"

    if [ "$version" = git ] ; then
        if [ ! -d "$pkgid" ] ; then
            echo ". cloning $1..."
            git clone $git_opts "$url" $tmp || die "get(): could not clone $url"
            mv -f "$tmp"/* "$work"/"$pkgid"
            $keep_tarballs && cp -rf "$work"/"$pkgid" "$sources"/"$pkgid"
        else
            cp -rf "$sources"/"$pkgid" "$work"
        fi
    else # we are downloading with curl

        if [ ! -f "$pkgid" ] ; then
            echo ". downloading $1..."
            curl -q -L -C - $curl_opts -o "$pkgid" --url "$url" ||
                die "get(): could not download $name"
            cp -f "$pkgid" $tmp
        else
            cp -f "$pkgid" $tmp
        fi

        case $(file $tmp/*) in
            *tgz*)   local ext=tgz   ;;
            *'gzip comp'*)  local ext=gz    ;;
            *'bzip2 comp'*) local ext=bz2   ;;
            *'XZ comp'*)    local ext=xz    ;;
            *) die "get(): could not discern compression type of $name"
        esac

        # decompressors bug out if no extension...
        mv -f $tmp/* $tmp/${name}.${ext}

        case $ext in
            xz)     xz      -d $tmp/* ;;
            gz|tgz) gunzip  -d $tmp/* ;;
            bz2)    bunzip2 -d $tmp/* ;;
            *) die "get(): unknown compression algorithm"
        esac
        [ $? -gt 0 ] && die "get(): failed to decompress $name"

        if file $tmp/* | grep 'tar archive' > /dev/null ; then
            ext=tar.${ext}
            mv $tmp/* $tmp/${name}.tar
            tar -xf $tmp/${name}.tar -C $tmp/ || 
                die "get(): tar could not extract $pkgid.$ext"       
        fi

        ! $keep_tarballs && rm -f "$sources"/"$pkgid" 

        mv -f $tmp/*/* "$work"/"$pkgid" ||
            die "get(): failed to move unpacked tarball"
    fi
    rm -rf $tmp
    # copy all port's files, except its pkgfile
    for file in $(ls -A "$ports"/"$name"/* | grep -v pkgfile) ; do
        cp -f "$file" "$pkgdir"
    done
}
