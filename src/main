# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# Variables              http://github.com/bonsai-linux/bonsai
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
: "${ROOT:=${HOME}/env/bonsai}"
: "${PORTS:=$ROOT/src/ports}"
: "${PKGS:=$ROOT/src/pkgs}"
: "${SOURCES:=$ROOT/src/sources}"
: "${WORK:=$ROOT/src/work}"
: "${CONFIG:=$ROOT/src/cfg}"
: "${PROMPT:=â†’}"

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# Main
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
check_env() {
    [ "$ROOT" ] || die "\$ROOT is not defined"
}

init() {
    mkdir -p "$PKGS" "$PORTS" "$SOURCES" "$WORK" "$CONFIG"
}

usage() {
>&2 cat <<"EOF"

 #
 #                        O
 ##, ,##,',##, ,##  ,#,   ,
 # # #  # #''# #,,  # #   #
 '#' '##' #  #  ,,# '##;, #

      [a]  -  add
      [i]  -  isinst
      [h]  -  usage

EOF
}

main() {
    check_env
    init
    [ "$1" ] || return

    flag=${1#-}
    shift

    # validate syntax
    case $flag in
        a|i)
            [ "$1" ] || die 'no argument provided'
    esac

    case $flag in
        a) add "$1" ;;
        i) isinst "$1" || die "$1 is not installed" && msg "$1 is installed" ;;
        h) usage
    esac
}
