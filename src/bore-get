# downloads url and extracts to $work/$pkg
# assumes: $name $version $source $pkgid $pkgfile in environment
get() {
    workdir="$work/$name"
    dldir="$work/dl"
    mkdir -p "$workdir" "$dldir"
    if [ "$version" = git ] ; then 
        ext=""
    else
        ext=".${source##*.}"
        grep '^source=.*.\.tar\.' "$pkgfile" >/dev/null && ext=".tar$ext"
    fi

    # NOTE: Downloading via git comes highly unrecommended.
    #       This makes packages depend on git, which is
    #       a rather large dependency for otherwise small programs.
    #       Instead, download a tarball from a commit hash using this format:
    #       version=<SHA_HASH>
    #       source=http://github.com/<GITHUB_USER>/$name/archive/$version.tar.gz
    dlgit() {
        : # todo
    }

    # downloads given url to $sources
    dlcurl() {
        msg "downloading $source..."
        # curl bugs out with certain delimiters,
        # as a fix have curl output to a temporary file, then rename
        curl -q -L -C - -# --url "$source" -o "$dldir/curl-$name-dl$ext"
        mv "$dldir/curl-$name-dl$ext" "$dldir/$pkgid$ext"
        ${keep_tarballs:=true} && cp -f "$dldir/$pkgid$ext" "$sources"/
    }

    # extracts given archive/file to $workdir
    extract() {
        msg "extracting $name"...
        decompress() {
            case "${ext##*.}" in
                xz)     xz-embedded < "$1" ;;
                gz|tgz) gunzip  -dc "$1"   ;;
                bz2)    bunzip2 -dc "$1"   ;;
                zip)    unzip -p  "$1"     ;;
            esac || die "get(): failed to decompress $1"
        }
        case "$ext" in
            .tar.*|.tgz)
                decompress "$1" | tar -C "$dldir" -xf -
                # ensure files are in toplevel (ie $dir/name, not $dir/$name/$name)
                mv -f "$dldir"/*/* "$workdir"/ 2> /dev/null ||:
                ;;
            # if not a tarball, simply write to $workdir
            *) decompress "$1" > "$workdir/${1%%$ext}"
        esac || die "get(): failed to extract $1"
    }

    # download tarball only if not in $sources
    if [ ! -e "$sources/$pkgid$ext" ] ; then
        dlcurl "$source" || die "get(): could not download $name"
        extract "$dldir/$pkgid$ext"
    else
        extract "$sources/$pkgid$ext"
    fi

    # copy all port's files, except its pkgfile -- (ex: patches)
    find "$ports/$name"/* ! -name pkgfile | while read -r file ; do
        cp -f "$file" "$workdir"
    done
    unset workdir dldir ext file
    unset -f dlgit dlcurl extract decompress
}
# vi:syntax=sh
# shellcheck shell=sh
